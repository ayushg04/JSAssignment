@model OnlineExamProject.Models.Question

@{
    ViewBag.Title = "Dashboard";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}
@*<div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Online Exam", "", "", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    @if (User.Identity.IsAuthenticated)
                    {
                        <li>@Html.ActionLink("GetList", "Index", "Questions")</li>
                        <li>@Html.ActionLink("Create", "Create", "Questions")</li>
                        <li><a>Dear - @User.Identity.Name</a></li>
                        <li>@Html.ActionLink("Logout", "Logout", "Account")</li>
                    }
                    else
                    {
                        <li>@Html.ActionLink("SignUP", "SignUP", "Account")</li>
                        <li>@Html.ActionLink("Login", "Login", "Account")</li>
                    }
                </ul>
            </div>
        </div>
    </div>*@
<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Question</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.exam_code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.exam_code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.exam_code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.question, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.question, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.question, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.option_A, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.option_A, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.option_A, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.option_B, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.option_B, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.option_B, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.option_C, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.option_C, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.option_C, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.option_D, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.option_D, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.option_D, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.correct_answer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.correct_answer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.correct_answer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
